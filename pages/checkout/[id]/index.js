import { useSession } from 'next-auth/react'
import Head from 'next/head'
import React, { useState } from 'react'
import Layouts from '../../../components/Layouts/Layouts'
import PurchaseDetail from '../../../components/PurchaseDetail/PurchaseDetail'
import Section from '../../../components/Section/Section'
import style from './Checkout.module.css'

export default function index({product}) {
  
  const {data: session} = useSession()
  const [data, setData] = useState(product)

  const dotPrice =(numb)=>{
    return numb.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.')
  }
  const priceDisc=(numb, disc)=>{
    let temp = numb/disc
    if(disc == null){
      return numb
    }
    return parseInt(numb-temp)
  }
  const pricePpn = (numb) =>{
    const temp = numb*10
    return parseInt(temp/100)
  }

  // handle options payment
  const handlePayment =()=>{
    console.log('handle click')
  }

  return (
    <div>
      <Head>
        <title>Shoes Shop | Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      <Layouts>
        <Section>
          <div className={style.container}>
            <PurchaseDetail
              orderId={'SSHPHARCODE'}
              idProduct={data.id}
              name={session?.user?.name}
              item={data.name}
              brand={data.brand}
              adr={'bandung --hardcode'}
              img={data.img}
              tax={dotPrice(pricePpn(data.price))}
              price={dotPrice(data.price)}
              // output nan dikarenakan data.discount tidak ada dibeberapa product
              total={dotPrice(priceDisc(data.price, data?.discount)+pricePpn(data.price))}
              discount={dotPrice(priceDisc(data.price, data?.discount))}
              tagDisc={data.discount}
              onOptPayment={handlePayment}
            />
          </div>
        </Section>
      </Layouts>
    </div>
  )
}
export async function getServerSideProps({params}){
  const res = await fetch('http://localhost:3000/api/product/'+params.id)
  const product = await res.json()
  return {
    props:{
      product
    }
  }
}