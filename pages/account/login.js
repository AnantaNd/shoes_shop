import { yupResolver } from '@hookform/resolvers/yup';
import Head from 'next/head';
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import * as Yup from 'yup';


import Link from "next/link";
import { alertService, userService } from 'services';

import { CircularProgress } from '@mui/material';
import Image from 'next/image';
import style from './Account.module.css';



export default function login(){
  const router = useRouter()

  // console.log(userService)

  // validation
  const validationSchema = Yup.object().shape({
    username: Yup.string().required('username is required'),
    password: Yup.string()
      .required('password is required')
      .min(6, 'password must be at least 6 char')
  })
  const formOption = {resolver: yupResolver(validationSchema)}

  const {register, handleSubmit, formState} = useForm(formOption)
  const {errors} = formState

  // function submit
  function onSubmit({username, password}){
    return userService.login(username, password)
      .then(()=>{
        const returnUrl = router.query.returnUrl || '/'
        router.push(returnUrl)
      })
      .catch(alertService.error)
  }

  return(
    <>
      <Head>
        <title>Shoes Shop | Log In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/logo.svg" />
      </Head>
      
      <div className={style.container}>
        {/* <div className={style.background}></div> */}
        <div className={style.wrapper}>
          {/* <h1 style={{textAlign: 'center'}}>Shoes Shop</h1> */}
          <Image className={style.img} src={'/login.svg'} width={500} height={500} objectFit='contain'/>
        </div>
        <div className={style.card}>
          <div className={style.header}>
            <Image className={style.img} src={'/shoesshop.svg'} alt='logo' width={70} height={70}/>
            <div className={style.contentHeader}>
              <h1 className={style.title}>Log In</h1>
              <p className={style.subTitle}>Find your best shoes with Shoes Shop</p>
            </div>
          </div>
          <div>
            <form onSubmit={handleSubmit(onSubmit)} className={style.form}>
              <div className={style.formGroup}>
                <label>Username</label>
                <input className={style.inpForm} name="username" type="text" {...register('username')}/>
                <small className={style.errorMsg}>{errors.username?.message}</small>
              </div>
              <div className={style.formGroup}>
                <label>Password</label>
                <input className={style.inpForm} name="password" type="password" {...register('password')}/>
                <small className={style.errorMsg}>{errors.password?.message}</small>
              </div>
              <div className={style.container_helper}>
                <p className={style.helper}>Don&#39;t have an account yet ?
                <Link href={'/account/register'}>
                  <span> Register</span>
                </Link></p>
              </div>
              {!formState.isSubmitting?
                <button className={style.btn} disabled={formState.isSubmitting}>Sign In </button>
                :
                <button className={style.btn} disabled={formState.isSubmitting}><CircularProgress size={15} thickness={5}/></button>
              }
              {/* <button className={style.btn} disabled={formState.isSubmitting}>
                {formState.isSubmitting && <CircularProgress size={15} thickness={5}/>}Signin 
              </button> */}
            </form>
          </div>
        </div>
      </div>
    </>
  )
}